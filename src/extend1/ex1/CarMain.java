package extend1.ex1;

public class CarMain {

    public static void main(String[] args) {
        ElectricCar electricCar = new ElectricCar();
        electricCar.move();
        electricCar.charge();

        GasCar gasCar = new GasCar();
        gasCar.move();
        gasCar.fillUp();
    }
}

/*상속 : 기존 클래스의 필드와 메서드를 새로운 클래스에서 재사용하게 해준다.extends 키워드를 사용한다. extends 대상은 하나만 가능하다.

- 부모클래스(슈퍼 클래스) : 상속을 통해 자신의 필드와 메서드를 다른 클래스에 제공하는 클래스
- 자식클래스(서브 클래스) : 부모 클래스로부터 필드와 메서드를 상속받는 클래스
 * 자식은 부모에 접근할 수 있지만, 부모는 자식클래스에 대한 접근이 불가하고 정보도 없다.
* 자바는 다중 상속을 지원하지 않는다. 자식은 여러 부모를 가질 수 없다는 것이다. 단, 부모가 부모를 가지는 것은 괜찮다.

상속과 메모리 구조 !!! 중요!
- 상속관계의 자식 클래스를 호출하면, 자기 자신 뿐만 아니라, 부모 클래스까지 함께 포함하여 인스턴스를 생성한다.
즉, 참조값은 x001로 하나지만, 그 안에는 부모와 자식 두 클래스가 공존하는 것이다. 단순히 필드와 메서드만 물려받는 게 아니라, 부모와 자식 모두
생성이 되고, 공간도 구분된다. 외부에서 볼 때 하나의 인스턴스로 보이는 것 뿐이다.

- 위와 같은 매커니즘이기 때문에, electricCar.charge()처럼 메서드나 필드를 호출하게 되면, 참조값 위치로 이동하여, 부모클래스의에서 찾아야 할 지
자식 클래스에서 찾아야 할지 판단하여야 한다. 왜나하면, 위에서 언급했다시피 둘 다 실제로 생성되고 구분되기 때문이다. 따라서, 먼저 갈 곳을 판단하는
기준은 '호출하는 변수의 타입(클래스) 이다. electricCar.charge()의 경우는 변수의 타입이 ElectricCar이므로, 같은 ElectricCar타입부터 찾아보고
그 후에 없으면 부모 클래스로 이동하여 찾는다. 만약 부모에도 없으면, 부모의 부모로 계속 올라가며 찾고, 없으면 컴파일 오류가 뜬다.
*/
